kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-user
  labels:
    app: local-user
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: user-postgres-volume
  labels:
    type: local
    app: user-postgres-volume
spec:
  storageClassName: local-user
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/user-postgres"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-postgres-claim
  labels:
    app: user-postgres-claim
spec:
  storageClassName: local-user
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  volumeName: user-postgres-volume

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-postgres
  labels:
    app: user-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-postgres
  template:
    metadata:
      labels:
        app: user-postgres
    spec:
      containers:
        - name: user-postgres
          image: postgres:15.2-alpine3.17
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: user-env
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: user-postgres-data
      volumes:
        - name: user-postgres-data
          persistentVolumeClaim:
            claimName: user-postgres-claim

---

apiVersion: v1
kind: Service
metadata:
  name: user-postgres
  labels:
    app: user-postgres
spec:
  type: NodePort
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30020
  selector:
    app: user-postgres
