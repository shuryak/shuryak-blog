version: "3.9"

services:

  user-postgres:
    image: postgres:14.5-alpine3.16
    restart: always
    container_name: user-postgres
    env_file: .env
    networks:
      - user-db-network
    volumes:
      - user-pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  articles-postgres:
    image: postgres:14.5-alpine3.16
    restart: always
    container_name: articles-postgres
    env_file: .env
    networks:
      - articles-db-network
    volumes:
      - articles-pg-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  user-server:
    build:
      context: .
      dockerfile: internal/user/Dockerfile
    image: user-server
    depends_on:
      - user-postgres
      - user-db-migrations
      - etcd
      - nats
    container_name: user-server
    networks:
      - user-db-network
      - registry-network
      - broker-network
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB: ${DB}
      PG_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@user-postgres:5432/$DB?sslmode=disable
      MICRO_REGISTRY: etcd
      MICRO_REGISTRY_ADDRESS: etcd:2379
      MICRO_SERVER_ADDRESS: :50051
      MICRO_BROKER: nats
      MICRO_BROKER_ADDRESS: ruser:T0pS3cr3t@nats
    ports:
      - "50051:50051"

  articles-server:
    build:
      context: .
      dockerfile: internal/articles/Dockerfile
    image: articles-server
    depends_on:
      - articles-postgres
      - articles-db-migrations
      - etcd
      - nats
    container_name: articles-server
    networks:
      - articles-db-network
      - registry-network
      - broker-network
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB: ${DB}
      PG_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@articles-postgres:5432/$DB?sslmode=disable
      MICRO_REGISTRY: etcd
      MICRO_REGISTRY_ADDRESS: etcd:2379
      MICRO_SERVER_ADDRESS: :50051
      MICRO_BROKER: nats
      MICRO_BROKER_ADDRESS: ruser:T0pS3cr3t@nats
    ports:
      - "50052:50051"

  micro-dashboard:
    image: xpunch/go-micro-dashboard:latest
    environment:
      - MICRO_REGISTRY=etcd
      - MICRO_REGISTRY_ADDRESS=etcd:2379
      - MICRO_BROKER=nats
      - MICRO_BROKER_ADDRESS=ruser:T0pS3cr3t@nats
      - SERVER_ADDRESS=:8082
      - SERVER_AUTH_USERNAME=user
      - SERVER_AUTH_PASSWORD=pass
    networks:
      - registry-network
      - broker-network
    ports:
      - "8082:8082"

  etcd:
    image: bitnami/etcd:3
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "2379:2379"
      - "2380:2380"
    networks:
      - registry-network

  nats:
    image: nats
    networks:
      - broker-network
    expose:
      - "4222"
    ports:
      - "8222:8222"
      - "4222:4222"
      - "6222:6222"

  user-db-migrations:
    image: migrate/migrate
    container_name: user-db-migrations
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB: ${DB}
    networks:
      - user-db-network
    volumes:
      - ./internal/user/migrations:/migrations
    depends_on:
      - user-postgres
    command: -path=/migrations -database postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@user-postgres:5432/$DB?sslmode=disable up

  articles-db-migrations:
    image: migrate/migrate
    container_name: articles-db-migrations
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB: ${DB}
    networks:
      - articles-db-network
    volumes:
      - ./internal/articles/migrations:/migrations
    depends_on:
      - articles-postgres
    command: -path=/migrations -database postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@articles-postgres:5432/$DB?sslmode=disable up

volumes:
  user-pg-data:
  articles-pg-data:
networks:
  user-db-network:
  articles-db-network:
  registry-network:
  broker-network:
